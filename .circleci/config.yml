version: 2
jobs:
  node:
    working_directory: ~/github-push-notifications-mobile
    docker:
      - image: circleci/node:9.2
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run: yarn
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      # - run: yarn lint
      - persist_to_workspace:
          root: ~/github-push-notifications-mobile
          paths:
            - node_modules

  # docs:
  #   working_directory: ~/github-push-notifications-mobile
  #   docker:
  #     - image: circleci/node:9.2
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: ~/github-push-notifications-mobile
  #     - run: ./node_modules/.bin/esdoc
  #     - run: mv docs ..
  #     - run: cp README.md ../docs
  #     - run: git checkout gh-pages
  #     - run: rm -rf ./*
  #     - run: mv ../docs/* ./
  #     - run: git config user.email "negebauerm@gmail.com"
  #     - run: git config user.name "negebauer"
  #     - run: git commit -am "docs"
  #     - run: git push

  android:
    working_directory: ~/github-push-notifications-mobile/android
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/github-push-notifications-mobile
      - run:
          name: Download android keystore
          command: curl -L -o app/github-push-notifications-mobile.keystore $ANDROID_KEYSTORE_URI
      - run:
          name: Download android google services
          command: curl -L -o app/google-services.json $ANDROID_GOOGLE_SERVICES_URI
      - attach_workspace:
          at: ~/github-push-notifications-mobile
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: echo "API_URL=$ENV_API_URL" >> ../.env
      - run: echo "GCM_SENDER_ID=$ENV_GCM_SENDER_ID" >> ../.env
      - run: bundle exec fastlane build_ci
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk
          destination: ./app-release.apk
      - persist_to_workspace:
          root: ~/github-push-notifications-mobile/android
          paths:
            - app/build/outputs/apk/release/app-release.apk

  ios:
    working_directory: ~/github-push-notifications-mobile/ios
    macos:
      xcode: "9.0"
    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
         path: ~/github-push-notifications-mobile
      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - restore_cache:
          key: yarn-v1-{{ checksum "../yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "../package.json" }}-{{ arch }}
      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn
      - save_cache:
          key: yarn-v1-{{ checksum "../yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "../package.json" }}-{{ arch }}
          paths:
            - ../node_modules
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: echo "API_URL=$ENV_API_URL" >> ../.env
      - run: echo "GCM_SENDER_ID=$ENV_GCM_SENDER_ID" >> ../.env
      # - run: curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
      - restore_cache:
          key: pods-v1-{{ checksum "Podfile.lock" }}-{{ arch }}
      - run: pod install
      - save_cache:
          key: pods-v1-{{ checksum "Podfile.lock" }}-{{ arch }}
          paths:
            - ./Pods
      - run: bundle exec fastlane build_ci
      - store_artifacts:
          path: GithubPushNotificationsMobile.ipa
          destination: ./GithubPushNotificationsMobile.ipa
      - store_artifacts:
          path: GithubPushNotificationsMobile.app.dSYM.zip
          destination: ./GithubPushNotificationsMobile.app.dSYM.zip
      - persist_to_workspace:
          root: ~/github-push-notifications-mobile/ios
          paths:
            - GithubPushNotificationsMobile.ipa

  beta-android:
    working_directory: ~/github-push-notifications-mobile/android
    docker:
      - image: circleci/ruby:2.5-node
    steps:
      - checkout:
         path: ~/github-push-notifications-mobile
      - attach_workspace:
          at: ~/github-push-notifications-mobile/android
      - attach_workspace:
          at: ~/github-push-notifications-mobile
      - run:
          name: Download android fastlane json
          command: curl -L -o fastlane/fastlane-github-push-notifications-mobile.json $ANDROID_FASTLANE_JSON_URI
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane beta_ci

  beta-ios:
    working_directory: ~/github-push-notifications-mobile/ios
    macos:
      xcode: "9.0"
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
         path: ~/github-push-notifications-mobile
      - attach_workspace:
          at: ~/github-push-notifications-mobile/ios
      - attach_workspace:
          at: ~/github-push-notifications-mobile
      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane beta_ci

  # deploy-android:
  #   working_directory: ~/github-push-notifications-mobile/android
  #   docker:
  #     - image: circleci/ruby:2.5-node
  #   steps:
  #     - checkout:
  #        path: ~/github-push-notifications-mobile
  #     - attach_workspace:
  #         at: ~/github-push-notifications-mobile/android
  #     - run:
  #         name: Download android fastlane json
  #         command: curl -L -o fastlane/fastlane-github-push-notifications-mobile.json $ANDROID_FASTLANE_JSON_URI
  #     - restore_cache:
  #         key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
  #     - run: bundle install --path vendor/bundle
  #     - save_cache:
  #         key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
  #         paths:
  #           - vendor/bundle
  #     - run: bundle exec fastlane deploy_ci

  # deploy-ios:
  #   working_directory: ~/github-push-notifications-mobile/ios
  #   macos:
  #     xcode: "9.0"
  #   steps:
  #     - checkout:
  #        path: ~/github-push-notifications-mobile
  #     - run:
  #         name: set Ruby version
  #         command:  echo "ruby-2.4" > ~/.ruby-version
  #     - attach_workspace:
  #         at: ~/github-push-notifications-mobile/ios
  #     - restore_cache:
  #         key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
  #     - run: bundle install --path vendor/bundle
  #     - save_cache:
  #         key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
  #         paths:
  #           - vendor/bundle
  #     - run: bundle exec fastlane deploy_ci

workflows:
  version: 2
  workflow:
    jobs:
      - node:
          filters:
            branches:
              ignore:
                - gh-pages
            tags:
              only: /.*/
      # - docs:
      #     requires:
      #       - node
      #     filters:
      #       tags:
      #         only: /.*/
      #       branches:
      #         only: master
      - android:
          requires:
            - node
          filters:
            branches:
              only:
                - /f\/.*/
                - master
            tags:
              only: /.*/
      - ios:
          requires:
            - node
          filters:
            branches:
              only:
                - /f\/.*/
                - master
            tags:
              only: /.*/
      - beta-android:
          requires:
            - android
          filters:
            branches:
              only: master
      - beta-ios:
          requires:
            - ios
          filters:
            branches:
              only: master
      # - deploy-android:
      #     requires:
      #       - android
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
      # - deploy-ios:
      #     requires:
      #       - ios
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
