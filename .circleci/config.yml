version: 2

### Variables ###

project-folder: &project-folder ~/push-for-github-mobile
android-folder: &android-folder ~/push-for-github-mobile/android
ios-folder: &ios-folder ~/push-for-github-mobile/ios
node-cache-key: &node-cache-key node-v9-{{ checksum "package.json" }}
node-cache-key-mac: &node-cache-key-mac node-v9-mac-{{ checksum "../package.json" }}
yarn-cache-key: &yarn-cache-key yarn-v9-{{ checksum "yarn.lock" }}
yarn-cache-key-mac: &yarn-cache-key-mac yarn-v9-mac-{{ checksum "../yarn.lock" }}
gemfile-cache-key: &gemfile-cache-key bundle-v9-{{ checksum "Gemfile.lock" }}
gemfile-cache-key-mac: &gemfile-cache-key-mac bundle-v9-mac-{{ checksum "Gemfile.lock" }}
cocapods-cache-key: &cocoapods-cache-key cocoapods-v9-{{ checksum "Podfile.lock" }}

### Configs ###

node-config: &node-config
  working_directory: *project-folder
  docker:
    - image: circleci/node:9.2

android-config: &android-config
  working_directory: *android-folder
  docker:
    - image: circleci/ruby:2.5-node

ios-config: &ios-config
  working_directory: *ios-folder
  # use a --login shell so our "set Rufvby version" command gets picked up for later steps
  shell: /bin/bash --login -o pipefail
  macos:
    xcode: '9.0'

### Workspace ###

checkout-mobile: &checkout-mobile
  checkout:
    path: *project-folder

attach-mobile: &attach-mobile
  attach_workspace:
    at: *project-folder

attach-android: &attach-android
  attach_workspace:
    at: *android-folder

attach-ios: &attach-ios
  attach_workspace:
    at: *ios-folder

set-ios-ruby-version: &set-ios-ruby-version
  run:
    name: set Ruby version
    command: echo "ruby-2.4" > ~/.ruby-version

### Env variables ###

set-env-variables: &set-env-variables
  run:
    name: 'Set env variables'
    command: |
      echo "API_URL=$ENV_API_URL" >> ../.env
      echo "GCM_SENDER_ID=$ENV_GCM_SENDER_ID" >> ../.env
      echo "SENTRY_API_URL=$ENV_SENTRY_API_URL" >> ../.env

### Fastlane ###

fastlane-build-ci: &fastlane-build-ci
  run: bundle exec fastlane build_ci

fastlane-beta-ci: &fastlane-beta-ci
  run: bundle exec fastlane beta_ci

### Libraries (yarn, bundle) ###

restore-yarn-cache: &restore-yarn-cache
  restore_cache:
    key: *yarn-cache-key

restore-yarn-cache-mac: &restore-yarn-cache-mac
  restore_cache:
    key: *yarn-cache-key-mac

restore-node-cache: &restore-node-cache
  restore_cache:
    key: *node-cache-key

restore-node-cache-mac: &restore-node-cache-mac
  restore_cache:
    key: *node-cache-key-mac

restore-gemfile-cache: &restore-gemfile-cache
  restore_cache:
    key: *gemfile-cache-key

restore-gemfile-cache-mac: &restore-gemfile-cache-mac
  restore_cache:
    key: *gemfile-cache-key-mac

restore-cocoapods-cache: &restore-cocoapods-cache
  restore_cache:
    key: *cocoapods-cache-key

yarn-install: &yarn-install
  run: yarn

bundle-install: &bundle-install
  run: bundle install --path vendor/bundle

save-yarn-cache: &save-yarn-cache
  save_cache:
    key: *yarn-cache-key
    paths:
      - ~/.cache/yarn

save-yarn-cache-mac: &save-yarn-cache-mac
  save_cache:
    key: *yarn-cache-key-mac
    paths:
      - ~/Library/Caches/Yarn

save-node-cache: &save-node-cache
  save_cache:
    key: *node-cache-key
    paths:
      - node_modules

save-node-cache-mac: &save-node-cache-mac
  save_cache:
    key: *node-cache-key-mac
    paths:
      - ../node_modules

save-gemfile-cache: &save-gemfile-cache
  save_cache:
    key: *gemfile-cache-key
    paths:
      - vendor/bundle

save-gemfile-cache-mac: &save-gemfile-cache-mac
  save_cache:
    key: *gemfile-cache-key-mac
    paths:
      - vendor/bundle

save-cocoapods-cache: &save-cocoapods-cache
  save_cache:
    key: *cocoapods-cache-key
    paths:
      - ~/.cocoapods/repos

### Jobs ###

jobs:
  yarn:
    <<: *node-config
    steps:
      - checkout
      - *restore-yarn-cache
      - *restore-node-cache
      - *yarn-install
      - *save-yarn-cache
      - *save-node-cache
      - persist_to_workspace:
          root: *project-folder
          paths:
            - node_modules

  build-android:
    <<: *android-config
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - *checkout-mobile
      - run:
          name: Download android keystore
          command: curl -L -o app/push-for-github-mobile.keystore $ANDROID_KEYSTORE_URI
      - run:
          name: Download android google services
          command: curl -L -o app/google-services.json $ANDROID_GOOGLE_SERVICES_URI
      - *attach-mobile
      - *restore-gemfile-cache
      - *bundle-install
      - *save-gemfile-cache
      - *set-env-variables
      - *fastlane-build-ci
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk
          destination: ./app-release.apk
      - persist_to_workspace:
          root: *android-folder
          paths:
            - app/build/outputs/apk/release/app-release.apk

  build-ios:
    <<: *ios-config
    steps:
      - *checkout-mobile
      - *set-ios-ruby-version
      - *restore-yarn-cache-mac
      - *restore-node-cache-mac
      # not using a workspace here as Node and Yarn versions differ
      # between our macOS executor image and the Docker containers above
      - *yarn-install
      - *save-yarn-cache-mac
      - *save-node-cache-mac
      - *restore-gemfile-cache-mac
      - *bundle-install
      - *save-gemfile-cache-mac
      - *set-env-variables
      - *restore-cocoapods-cache
      - run:
          name: Download cocoapods
          command: if [[ ! -e ~/.cocoapods/repos ]]; then curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf; fi
      - *save-cocoapods-cache
      - run: pod install
      - *fastlane-build-ci
      - store_artifacts:
          path: PushForGithub.ipa
          destination: ./PushForGithub.ipa
      - store_artifacts:
          path: PushForGithub.app.dSYM.zip
          destination: ./PushForGithub.app.dSYM.zip
      - persist_to_workspace:
          root: *ios-folder
          paths:
            - PushForGithub.ipa

  beta-android:
    <<: *android-config
    steps:
      - *checkout-mobile
      - run:
          name: Download android fastlane json
          command: curl -L -o fastlane/fastlane-push-for-github-mobile.json $ANDROID_FASTLANE_JSON_URI
      - *attach-mobile
      - *attach-android
      - *restore-gemfile-cache
      - *bundle-install
      - *save-gemfile-cache
      - *fastlane-beta-ci

  beta-ios:
    <<: *ios-config
    steps:
      - *checkout-mobile
      - *attach-mobile
      - *attach-ios
      - *set-ios-ruby-version
      - *restore-gemfile-cache-mac
      - *bundle-install
      - *save-gemfile-cache-mac
      - *fastlane-beta-ci

  deploy-android:
    <<: *android-config
    steps:
      - run: echo 'TODO'

  deploy-ios:
    <<: *ios-config
    steps:
      - run: echo 'TODO'

### Workflow config variables ###

requires-yarn: &requires-yarn
  requires:
   - yarn

master-branch-filter: &master-branch-filter
  filters:
    branches:
      only: master

any-tag: &any-tag
  tags:
    only: /.*/

develop-filters: &develop-filters
  filters:
    branches:
      only:
        - /f\/.*/
        - master
    <<: *any-tag

deploy-filters: &deploy-filters
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/

### Workflows ###

workflows:
  version: 2
  commit:
    jobs:
      - yarn:
          filters:
            branches:
              ignore:
                - gh-pages
            <<: *any-tag
      - build-android:
          <<: *requires-yarn
          <<: *develop-filters
      - build-ios:
          <<: *requires-yarn
          <<: *develop-filters
      - deploy-android:
          requires:
            - build-android
          <<: *deploy-filters
      - deploy-ios:
          requires:
            - build-ios
          <<: *deploy-filters
  daily-beta:
    triggers:
      - schedule:
          cron: '15 14 * * *'
          <<: *master-branch-filter
    jobs:
      - yarn:
          <<: *master-branch-filter
      - build-android:
          <<: *requires-yarn
          <<: *master-branch-filter
      - build-ios:
          <<: *requires-yarn
          <<: *master-branch-filter
      - beta-android:
          requires:
            - build-android
          <<: *master-branch-filter
      - beta-ios:
          requires:
            - build-ios
          <<: *master-branch-filter
